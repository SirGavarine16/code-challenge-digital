// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MovementsList /> should render correctly 1`] = `
<View
  style={
    [
      {
        "flex": 1,
      },
      {
        "paddingBottom": 20,
      },
    ]
  }
>
  <Text
    style={
      {
        "color": "#9B9898",
        "fontSize": 14,
        "fontWeight": "800",
        "marginBottom": 20,
        "textTransform": "uppercase",
      }
    }
    testID="section-label"
  >
    Tus movimientos
  </Text>
  <View
    style={
      {
        "backgroundColor": "white",
        "borderRadius": 8,
        "flex": 1,
        "padding": 10,
      }
    }
    testID="list-container"
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={[Function]}
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      keyExtractor={[Function]}
      maxToRenderPerBatch={8}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <RCTRefreshControl />
      <View>
        <Text
          style={
            {
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "center",
            }
          }
          testID="empty-message"
        >
          No hay movimientos disponibles.
        </Text>
      </View>
    </RCTScrollView>
  </View>
  <View
    style={
      {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginTop": 30,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "rgb(0, 122, 255)",
          "borderRadius": 10,
          "opacity": 1,
          "padding": 15,
          "width": "48.5%",
        }
      }
      testID="button"
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 14,
            "fontWeight": "800",
            "textAlign": "center",
          }
        }
        testID="button-title"
      >
        Ganados
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "rgb(0, 122, 255)",
          "borderRadius": 10,
          "opacity": 1,
          "padding": 15,
          "width": "48.5%",
        }
      }
      testID="button"
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 14,
            "fontWeight": "800",
            "textAlign": "center",
          }
        }
        testID="button-title"
      >
        Canjeados
      </Text>
    </View>
  </View>
</View>
`;

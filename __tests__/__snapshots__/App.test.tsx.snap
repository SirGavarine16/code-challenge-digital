// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#F8F8F8",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          forwardedRef={[Function]}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                  "marginTop": 0,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "#F8F8F8",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "flex": 1,
                              "paddingHorizontal": 20,
                            },
                            {
                              "paddingBottom": 0,
                              "paddingTop": 0,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "marginBottom": 20,
                              "paddingTop": 30,
                            }
                          }
                        >
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 20,
                                  "fontWeight": "400",
                                },
                                {
                                  "fontWeight": "800",
                                },
                              ]
                            }
                            testID="welcome-message"
                          >
                            Bienvenido de vuelta!
                          </Text>
                          <Text
                            style={
                              [
                                {
                                  "fontSize": 20,
                                  "fontWeight": "400",
                                },
                              ]
                            }
                            testID="user-name"
                          >
                            Ruben Rodr√≠guez
                          </Text>
                        </View>
                        <View
                          style={
                            {
                              "marginBottom": 20,
                            }
                          }
                        >
                          <Text
                            style={
                              {
                                "color": "#9B9898",
                                "fontSize": 14,
                                "fontWeight": "800",
                                "marginBottom": 20,
                                "textTransform": "uppercase",
                              }
                            }
                            testID="section-label"
                          >
                            Tus puntos
                          </Text>
                          <View
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "borderRadius": 20,
                                  "elevation": 16,
                                  "height": 150,
                                  "marginHorizontal": 20,
                                  "padding": 15,
                                  "shadowColor": "#000",
                                  "shadowOffset": {
                                    "height": 8,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0.44,
                                  "shadowRadius": 10.32,
                                },
                                {
                                  "backgroundColor": "#334FFA",
                                },
                              ]
                            }
                            testID="points-card"
                          >
                            <Text
                              style={
                                {
                                  "alignSelf": "flex-start",
                                  "color": "white",
                                  "fontSize": 16,
                                  "fontWeight": "800",
                                  "textTransform": "capitalize",
                                }
                              }
                              testID="month-label"
                            >
                              Diciembre
                            </Text>
                            <Text
                              style={
                                {
                                  "color": "white",
                                  "fontSize": 32,
                                  "fontWeight": "800",
                                  "position": "absolute",
                                  "textAlign": "center",
                                  "top": "50%",
                                  "width": "100%",
                                }
                              }
                              testID="points-label"
                            >
                              0.00 pts
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            [
                              {
                                "flex": 1,
                              },
                              {
                                "marginBottom": 0,
                              },
                            ]
                          }
                        >
                          <Text
                            style={
                              {
                                "color": "#9B9898",
                                "fontSize": 14,
                                "fontWeight": "800",
                                "marginBottom": 20,
                                "textTransform": "uppercase",
                              }
                            }
                            testID="section-label"
                          >
                            Tus movimientos
                          </Text>
                          <View
                            style={
                              {
                                "backgroundColor": "white",
                                "borderRadius": 8,
                                "flex": 1,
                                "padding": 10,
                              }
                            }
                            testID="list-container"
                          >
                            <RCTScrollView
                              ItemSeparatorComponent={[Function]}
                              data={[]}
                              getItem={[Function]}
                              getItemCount={[Function]}
                              getItemLayout={[Function]}
                              keyExtractor={[Function]}
                              maxToRenderPerBatch={8}
                              onContentSizeChange={[Function]}
                              onLayout={[Function]}
                              onMomentumScrollBegin={[Function]}
                              onMomentumScrollEnd={[Function]}
                              onScroll={[Function]}
                              onScrollBeginDrag={[Function]}
                              onScrollEndDrag={[Function]}
                              removeClippedSubviews={false}
                              renderItem={[Function]}
                              scrollEventThrottle={50}
                              showsVerticalScrollIndicator={false}
                              stickyHeaderIndices={[]}
                              viewabilityConfigCallbackPairs={[]}
                            >
                              <View />
                            </RCTScrollView>
                          </View>
                          <View
                            style={
                              {
                                "flexDirection": "row",
                                "justifyContent": "space-between",
                                "marginTop": 30,
                              }
                            }
                          >
                            <View
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessibilityValue={
                                {
                                  "max": undefined,
                                  "min": undefined,
                                  "now": undefined,
                                  "text": undefined,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "backgroundColor": "#334FFA",
                                  "borderRadius": 10,
                                  "opacity": 1,
                                  "padding": 15,
                                  "width": "48.5%",
                                }
                              }
                              testID="button"
                            >
                              <Text
                                style={
                                  {
                                    "color": "white",
                                    "fontSize": 14,
                                    "fontWeight": "800",
                                    "textAlign": "center",
                                  }
                                }
                                testID="button-title"
                              >
                                Ganados
                              </Text>
                            </View>
                            <View
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessibilityValue={
                                {
                                  "max": undefined,
                                  "min": undefined,
                                  "now": undefined,
                                  "text": undefined,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "backgroundColor": "#334FFA",
                                  "borderRadius": 10,
                                  "opacity": 1,
                                  "padding": 15,
                                  "width": "48.5%",
                                }
                              }
                              testID="button"
                            >
                              <Text
                                style={
                                  {
                                    "color": "white",
                                    "fontSize": 14,
                                    "fontWeight": "800",
                                    "textAlign": "center",
                                  }
                                }
                                testID="button-title"
                              >
                                Canjeados
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;
